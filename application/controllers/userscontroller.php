<?php class UsersController extends Controller {			public function homepage()	{			$header = "Homepage";		$this->set('header', $header);	}	public function logout()	{		if ( isset($_SESSION['userrole'])) {			session_destroy();			header("location:../guests/homepage");		}	}	public function bestel($id=0)	{		$optreden = $this->_model->select_optreden_by_id($id);		$title = $optreden[0]['Optreden']['naam'];		$prijs = $optreden[0]['Optreden']['kaart_prijs'];		$header = "<h1>reservering</h1>";		$this->set('header',$header);		$this->set('title',"<h2>".$title."</h2>");		$this->set('prijs',"&#8364; ".$prijs);		$this->set('id',$id);		if (isset($_POST['amount'])) {			if ($this->check_login()){				$bestellingen = $this->count_bestellingen($_SESSION['user_id'],$optreden[0]['Optreden']['optreden_id']);				$banned = $this->check_if_banned($_SESSION['user_id']);				if($banned == "false"){					if($bestellingen < 4){						if ($bestellingen+$_POST['amount'] <= 4) {							$user = $this->_model->select_all();							$reserverings_kosten = $_POST['amount']*1.00;							$Subtotaal = $prijs*$_POST['amount'];							$totaal = $Subtotaal+$reserverings_kosten;							$date = date("y-m-d H:i:s");							$random = MD5($date.$totaal);							$message = "<html><body>										<h1>Geachte heer/mevrouw ".$user[0]["User"]["achternaam"]."</h1> <br><br>										<h2>Uw bestelling is ontvangen, hier onder kunt hem nog een laatste keer bekijken.</h2><br />										<table>											<th><strong>Aaantal</strong></th>											<th><strong>Optreden</strong></th>											<th><strong>Ticked</strong></th>											<th><strong>Prijs</strong></th>											<th><strong>Totaal</strong></th>											<tr>												<td>".$_POST['amount']."</td>												<td>".$title."</td>												<td>Rang 2 - Normaal</td>												<td>".$prijs."</td>												<td>".$prijs*$_POST['amount']."</td>											</tr>											<tr>												<td>Subtotaal: </td>												<td>".$Subtotaal."</td>											</tr>											<tr>												<td>Reserverings kosten*: </td>												<td>".$reserverings_kosten."</td>											</tr>											<tr>												<td>Totaal: </td>												<td>".$totaal."</td>											</tr>										</table>										<p>De bestelling moet binnen 2 dagen opgehaald worden. <br></p>										<p>Indien u de bestelling wilt opzeggen <a href=http://localhost/".BASE_URL."users/bestellingen/".$_SESSION['user_id'].">klik hier</a></p>										</body></html>";							$subject = "Bestelling kaarten manifesto Driebruggen";							$receiver = $user[0]["User"]["email"];							$this->send_email($message,$receiver,$subject);												$aantal = $optreden[0]['Optreden']['kaarten_beschikbaar'] - $_POST['amount'];							$this->_model->insert_into_bestelling($_POST,$aantal);							// exit();							header("refresh:0;url=".BASE_URL."users/bestel/".$id."");						}						else						{							$max_kaarten = 4 - $bestellingen;							$header = "<h1>Helaas is het niet mogelijk om meer kaarten te bestellen,										<br> u kunt nog maximaal ".$max_kaarten." the reserveren. </h1>";						}					}					else					{						$header = "<h1>Helaas is het niet mogelijk om meer dan 4 kaarten voor een optreden te reserveren.</h1>";					}				}				else				{					$header = "<h1>U bent uitgesloten van reserveren.</h1>";				}							}			else			{				$header = "<h1>U bent niet ingelogd,<br> u wordt doorgestuurd naar de login pagina</h1>";				header("refresh:4;url=".BASE_URL."guests/login/users/bestel/".$id); 			}		}		$this->set('header',$header);	}	public function check_if_banned($id){		$users = $this->_model->select_user_by_id($id);		$user = $users[0]["User"];		if ($user["banned"] == 0){			return "true";		}		else{			return "false";		}	}	public function count_bestellingen($id,$optreden_id)	{		$aantal = 0;		$bestelling = $this->_model->select_aantal_bestellingen_by_user_id($id);		// var_dump($bestelling);		foreach ($bestelling as $value)		{			if($value["Bestelling"]["optreden"] == $optreden_id){				$aantal += $value["Bestelling"]["aantal"];			}					}		// echo $aantal; exit();		return $aantal;	}	public function check_login()	{		if (isset($_SESSION['user_id']))		{			return true;		}		else		{			return false;		}	}	public function check_mailinglist()	{		$user = $this->_model->select_mailinglist_by_user_id($_SESSION['user_id']);		if (sizeof($user) > 0)		{			return true;		}		else		{			return false;		}	}	public function send_email($message,$receiver,$subject)	{				// $carbonCopy = "sjaakie1984@hotmail.com";		// $blindCarbonCopy ="info@belastingdienst.nl";						$headers   = "From: info@carre.nl\r\n";		$headers   .= "Reply-To: info@carre.nl";		// $headers   .= "Cc: ".$carbonCopy."\r\n";		// $headers   .= "Bcc: ".$blindCarbonCopy."\r\n";		$headers   .= "X-mailer: PHP/".phpversion()."\r\n";		$headers   .= "MINE-version: 1.0\r\n";		$headers   .= "Content-Type: text/html; charset=iso-8859-1\r\n";			mail( $receiver, $subject, $message, $headers);	}	public function mailinglist()	{		$header = "<h1>mailinglijst</h1>";		$text = "Klik hier onder om je aan te melden voor onze mailing list";		if(isset($_POST['submit'])){			if($this->check_login()){				if(!$this->check_mailinglist()){					$this->_model->insert_into_mailinglist($_SESSION['user_id']);					$header = "<h1>Bedankt voor het aanmelden voor onze mailing lijst</h1>";				}				else{					$header = "<h1>U bent al aangemeld voor onze mailing lijst</h1>";				}			}			else{				$header = "<h1>U bent niet ingelogd,<br> u wordt doorgestuurd naar de login pagina</h1>";				header("refresh:4;url=".BASE_URL."guests/login/users/mailinglist"); 			}		}		$this->set('text',$text);		$this->set('header',$header);	}	public function bestellingen($user_id = 0)	{		$header = "<h1>bestellingen</h1>";		$this->set('header',$header);		$bestellingen = $this->_model->select_bestellingen_by_user_id($_SESSION['user_id']);		$show_table = '';		if(sizeof($bestellingen) > 0){			foreach ($bestellingen as $value)			{				$id = $value['Bestelling']['bestelling_id'];				$aantal = $value['Bestelling']['aantal'];				$datum = $value['Bestelling']['datum'];				$datum = strtotime( $datum );				$datum = date("d/M/Y", $datum);				$optredens = $this->_model->select_optreden_by_id($value['Bestelling']['optreden']);								foreach ($optredens as $value)				{					$aantal_kaarten = ($aantal + $value['Optreden']['kaarten_beschikbaar']);					$show_table .= "<tr>										<td>											".$id."										</td>										<td>											".$value['Optreden']['naam']."										</td>										<td>											".$aantal."										</td>										<td>											".$datum."										</td>										<td>											<a href=".BASE_URL."users/remove/".$id."/".$aantal_kaarten."/".$value['Optreden']['optreden_id'].">												<img class= 'img1' src='".BASE_URL."public/img/drop.png'> 											</a>										</td>									</tr>";				}			}		}		else		{			$show_table .= "geen besetellingen beschikbaar";		}		$this->set('show_bestellingen', $show_table);	}	public function remove($id,$aantal,$optreden_id)	{		$this->_model->remove_bestelling($id,$aantal,$optreden_id);		header('location:'.BASE_URL.'/users/bestellingen/'.$_SESSION['user_id']);		}}?>